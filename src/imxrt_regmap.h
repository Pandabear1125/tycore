#ifndef IMXRT_REGMAP_H
#define IMXRT_REGMAP_H

// This file contains the register definitions and contents for the IMXRT1062

// The register format is as follows:
//      typedef volatile struct {
//          reg_t field1 : a;
//          reg_t field2 : b;
//          ...
//          reg_t fieldN : z;
//      } REGISTER_NAME_t;
// #define REGISTER_NAME ((REGISTER_NAME_t*)0xADDRESS)
// The define is required to keep the compiler from placing these in the DTCM and in memory in general

#include <stdint.h>

typedef volatile uint32_t reg_t;

// IOMUXC Memory Map/Register Definition
// RM 11

#pragma region IOMUXC

typedef volatile struct {
    reg_t MUX_MODE : 4;
    reg_t SION : 1;
    reg_t : 27;
} IOMUXC_SW_MUX_CTL_PAD_t;

typedef volatile struct {
    reg_t SRE : 1;
    reg_t : 2;
    reg_t DSE :3;
    reg_t SPEED : 2;
    reg_t : 3;
    reg_t ODE : 1;
    reg_t PKE : 1;
    reg_t PUE : 1;
    reg_t PUS : 2;
    reg_t HYS : 1;
    reg_t : 15;
} IOMUXC_SW_PAD_CTL_PAD_t;


// IOMUXC GPR Memory Map/Register Definition
// RM 11.3

#pragma region IOMUXC_GPR

typedef volatile struct {
    reg_t reserved : 32; 
} IOMUXC_GPR_GPR0_t;
#define IOMUXC_GPR_GPR0 ((IOMUXC_GPR_GPR0_t*)0x400AC000)

typedef volatile struct {
    reg_t SAI1_MCLK1_SEL : 3;
    reg_t SAI1_MCLK2_SEL : 3;
    reg_t SAI1_MCLK3_SEL : 2;
    reg_t SAI2_MCLK3_SEL : 2;
    reg_t SAI3_MCLK4_SEL : 2;
    reg_t GINT : 1;
    reg_t ENET1_CLK_SEL : 1;
    reg_t ENET2_CLK_SEL : 1;
    reg_t : 2;
    reg_t ENET1_TX_CLK_DIR : 1;
    reg_t ENET2_TX_CLK_DIR : 1;
    reg_t SAI1_MCLK_DIR : 1;
    reg_t SAI2_MCLK_DIR : 1;
    reg_t SAI3_MCLK_DIR : 1;
    reg_t EXC_MON : 1;
    reg_t ENET_IPG_CLK_S_EN : 1;
    reg_t : 7;
    reg_t CM7_FORCE_HCLK_EN : 1;
} IOMUXC_GPR_GPR1_t;
#define IOMUXC_GPR_GPR1 ((IOMUXC_GPR_GPR1_t*)0x400AC004)

typedef volatile struct {
    reg_t AXBS_L_AXBXL_HIGH_PRIORITY : 1;
    reg_t AXBS_L_DMA_HIGH_PRIORITY : 1;
    reg_t AXBS_L_FORCE_ROUND_ROBIN : 1;
    reg_t AXBS_P_M0_HIGH_PRIORITY : 1;
    reg_t AXBS_P_M1_HIGH_PRIORITY : 1;
    reg_t AXBS_P_FORCE_ROUND_ROBIN : 1;
    reg_t CANFD_FILTER_BYPASS : 1;
    reg_t : 5;
    reg_t L2_MEM_EN_POWERSAVING : 1;
    reg_t RAM_AUTO_CLK_GATING_EN : 1;
    reg_t L2_MEM_DEEPSLEEP : 1;
    reg_t : 1;
    reg_t MQS_CLK_DIV : 8;
    reg_t MQS_SW_RST : 1;
    reg_t MQS_EN : 1;
    reg_t MQS_OVERSAMPLE : 1;
    reg_t : 1;
    reg_t QTIMER1_TMR_CNTS_FREEZE : 1;
    reg_t QTIMER2_TMR_CNTS_FREEZE : 1;
    reg_t QTIMER3_TMR_CNTS_FREEZE : 1;
    reg_t QTIMER4_TMR_CNTS_FREEZE : 1;
} IOMUXC_GPR_GPR2_t;
#define IOMUXC_GPR_GPR2 ((IOMUXC_GPR_GPR2_t*)0x400AC008)

typedef volatile struct {
    reg_t OCRAM_CTL : 4;
    reg_t DCP_KEY_SEL : 1;
    reg_t : 3;
    reg_t OCRAM2_CTL : 4;
    reg_t : 3;
    reg_t AXBS_L_HALT_REQ : 1;
    reg_t OCRAM_STATUS : 4;
    reg_t : 4;
    reg_t OCRAM2_STATUS : 4;
    reg_t : 3;
    reg_t AXBS_L_HALTED : 1;
} IOMUXC_GPR_GPR3_t;
#define IOMUXC_GPR_GPR3 ((IOMUXC_GPR_GPR3_t*)0x400AC00C)

typedef volatile struct {
    reg_t EDMA_STOP_REQ : 1;
    reg_t CAN1_STOP_REQ : 1;
    reg_t CAN2_STOP_REQ : 1;
    reg_t TRNG_STOP_REQ : 1;
    reg_t ENET_STOP_REQ : 1;
    reg_t SAI1_STOP_REQ : 1;
    reg_t SAI2_STOP_REQ : 1;
    reg_t SAI3_STOP_REQ : 1;
    reg_t ENET2_STOP_REQ : 1;
    reg_t SEMC_STOP_REQ : 1;
    reg_t PIT_STOP_REQ : 1;
    reg_t FLEXSPI_STOP_REQ : 1;
    reg_t FLEXIO1_STOP_REQ : 1;
    reg_t FLEXIO2_STOP_REQ : 1;
    reg_t FLEXIO3_STOP_REQ : 1;
    reg_t FLEXIO4_STOP_REQ : 1;
    reg_t EDMA_STOP_ACK : 1;
    reg_t CAN1_STOP_ACK : 1;
    reg_t CAN2_STOP_ACK : 1;
    reg_t TRNG_STOP_ACK : 1;
    reg_t ENET_STOP_ACK : 1;
    reg_t SAI1_STOP_ACK : 1;
    reg_t SAI2_STOP_ACK : 1;
    reg_t SAI3_STOP_ACK : 1;
    reg_t ENET2_STOP_ACK : 1;
    reg_t SEMC_STOP_ACK : 1;
    reg_t PIT_STOP_ACK : 1;
    reg_t FLEXSPI_STOP_ACK : 1;
    reg_t FLEXIO1_STOP_ACK : 1;
    reg_t FLEXIO2_STOP_ACK : 1;
    reg_t FLEXIO3_STOP_ACK : 1;
    reg_t FLEXIO4_STOP_ACK : 1;
} IOMUXC_GPR_GPR4_t;
#define IOMUXC_GPR_GPR4 ((IOMUXC_GPR_GPR4_t*)0x400AC010)

typedef volatile struct {
    reg_t : 6;
    reg_t WDOG1_MASK : 1;
    reg_t WDOG2_MASK : 1;
    reg_t : 15;
    reg_t GPT2_CAPIN1_SEL : 1;
    reg_t GPT2_CAPIN2_SEL : 1;
    reg_t ENET_EVENT3IN_SEL : 1;
    reg_t ENET2_EVENT3IN_SEL : 1;
    reg_t : 1;
    reg_t VREF_1M_CLK_GPT1 : 1;
    reg_t VREF_1M_CLK_GPT2 : 1;
    reg_t : 2;
} IOMUXC_GPR_GPR5_t;
#define IOMUXC_GPR_GPR5 ((IOMUXC_GPR_GPR5_t*)0x400AC014)

typedef volatile struct {
    reg_t QTIMER1_TRM0_INPUT_SEL : 1;
    reg_t QTIMER1_TRM1_INPUT_SEL : 1;
    reg_t QTIMER1_TRM2_INPUT_SEL : 1;
    reg_t QTIMER1_TRM3_INPUT_SEL : 1;
    reg_t QTIMER2_TRM0_INPUT_SEL : 1;
    reg_t QTIMER2_TRM1_INPUT_SEL : 1;
    reg_t QTIMER2_TRM2_INPUT_SEL : 1;
    reg_t QTIMER2_TRM3_INPUT_SEL : 1;
    reg_t QTIMER3_TRM0_INPUT_SEL : 1;
    reg_t QTIMER3_TRM1_INPUT_SEL : 1;
    reg_t QTIMER3_TRM2_INPUT_SEL : 1;
    reg_t QTIMER3_TRM3_INPUT_SEL : 1;
    reg_t QTIMER4_TRM0_INPUT_SEL : 1;
    reg_t QTIMER4_TRM1_INPUT_SEL : 1;
    reg_t QTIMER4_TRM2_INPUT_SEL : 1;
    reg_t QTIMER4_TRM3_INPUT_SEL : 1;
    reg_t IOMUXC_XBAR_DIR_SEL_4 : 1;
    reg_t IOMUXC_XBAR_DIR_SEL_5 : 1;
    reg_t IOMUXC_XBAR_DIR_SEL_6 : 1;
    reg_t IOMUXC_XBAR_DIR_SEL_7 : 1;
    reg_t IOMUXC_XBAR_DIR_SEL_8 : 1;
    reg_t IOMUXC_XBAR_DIR_SEL_9 : 1;
    reg_t IOMUXC_XBAR_DIR_SEL_10 : 1;
    reg_t IOMUXC_XBAR_DIR_SEL_11 : 1;
    reg_t IOMUXC_XBAR_DIR_SEL_12 : 1;
    reg_t IOMUXC_XBAR_DIR_SEL_13 : 1;
    reg_t IOMUXC_XBAR_DIR_SEL_14 : 1;
    reg_t IOMUXC_XBAR_DIR_SEL_15 : 1;
    reg_t IOMUXC_XBAR_DIR_SEL_16 : 1;
    reg_t IOMUXC_XBAR_DIR_SEL_17 : 1;
    reg_t IOMUXC_XBAR_DIR_SEL_18 : 1;
    reg_t IOMUXC_XBAR_DIR_SEL_19 : 1;    
} IOMUXC_GPR_GPR6_t;
#define IOMUXC_GPR_GPR6 ((IOMUXC_GPR_GPR6_t*)0x400AC018)

typedef volatile struct {
    reg_t LPI2C1_STOP_REQ : 1;
    reg_t LPI2C2_STOP_REQ : 1;
    reg_t LPI2C3_STOP_REQ : 1;
    reg_t LPI2C4_STOP_REQ : 1;
    reg_t LPSPI1_STOP_REQ : 1;
    reg_t LPSPI2_STOP_REQ : 1;
    reg_t LPSPI3_STOP_REQ : 1;
    reg_t LPSPI4_STOP_REQ : 1;
    reg_t LPUART1_STOP_REQ : 1;
    reg_t LPUART2_STOP_REQ : 1;
    reg_t LPUART3_STOP_REQ : 1;
    reg_t LPUART4_STOP_REQ : 1;
    reg_t LPUART5_STOP_REQ : 1;
    reg_t LPUART6_STOP_REQ : 1;
    reg_t LPUART7_STOP_REQ : 1;
    reg_t LPUART8_STOP_REQ : 1;
    reg_t LPI2C1_STOP_ACK : 1;
    reg_t LPI2C2_STOP_ACK : 1;
    reg_t LPI2C3_STOP_ACK : 1;
    reg_t LPI2C4_STOP_ACK : 1;
    reg_t LPSPI1_STOP_ACK : 1;
    reg_t LPSPI2_STOP_ACK : 1;
    reg_t LPSPI3_STOP_ACK : 1;
    reg_t LPSPI4_STOP_ACK : 1;
    reg_t LPUART1_STOP_ACK : 1;
    reg_t LPUART2_STOP_ACK : 1;
    reg_t LPUART3_STOP_ACK : 1;
    reg_t LPUART4_STOP_ACK : 1;
    reg_t LPUART5_STOP_ACK : 1;
    reg_t LPUART6_STOP_ACK : 1;
    reg_t LPUART7_STOP_ACK : 1;
    reg_t LPUART8_STOP_ACK : 1;
} IOMUXC_GPR_GPR7_t;
#define IOMUXC_GPR_GPR7 ((IOMUXC_GPR_GPR7_t*)0x400AC01C)

typedef volatile struct {
    reg_t LPI2C1_IPG_STOP_MODE : 1;
    reg_t LP12C1_IPG_DOZE : 1;
    reg_t LPI2C2_IPG_STOP_MODE : 1;
    reg_t LPI2C2_IPG_DOZE : 1;
    reg_t LPI2C3_IPG_STOP_MODE : 1;
    reg_t LPI2C3_IPG_DOZE : 1;
    reg_t LPI2C4_IPG_STOP_MODE : 1;
    reg_t LPI2C4_IPG_DOZE : 1;
    reg_t LPSPI1_IPG_STOP_MODE : 1;
    reg_t LPSPI1_IPG_DOZE : 1;
    reg_t LPSPI2_IPG_STOP_MODE : 1;
    reg_t LPSPI2_IPG_DOZE : 1;
    reg_t LPSPI3_IPG_STOP_MODE : 1;
    reg_t LPSPI3_IPG_DOZE : 1;
    reg_t LPSPI4_IPG_STOP_MODE : 1;
    reg_t LPSPI4_IPG_DOZE : 1;
    reg_t LPUART1_IPG_STOP_MODE : 1;
    reg_t LPUART1_IPG_DOZE : 1;
    reg_t LPUART2_IPG_STOP_MODE : 1;
    reg_t LPUART2_IPG_DOZE : 1;
    reg_t LPUART3_IPG_STOP_MODE : 1;
    reg_t LPUART3_IPG_DOZE : 1;
    reg_t LPUART4_IPG_STOP_MODE : 1;
    reg_t LPUART4_IPG_DOZE : 1;
    reg_t LPUART5_IPG_STOP_MODE : 1;
    reg_t LPUART5_IPG_DOZE : 1;
    reg_t LPUART6_IPG_STOP_MODE : 1;
    reg_t LPUART6_IPG_DOZE : 1;
    reg_t LPUART7_IPG_STOP_MODE : 1;
    reg_t LPUART7_IPG_DOZE : 1;
    reg_t LPUART8_IPG_STOP_MODE : 1;
    reg_t LPUART8_IPG_DOZE : 1;
} IOMUXC_GPR_GPR8_t;
#define IOMUXC_GPR_GPR8 ((IOMUXC_GPR_GPR8_t*)0x400AC020)

typedef volatile struct {
    reg_t reserved : 32;
} IOMUXC_GPR_GPR9_t;
#define IOMUXC_GPR_GPR9 ((IOMUXC_GPR_GPR9_t*)0x400AC024)

typedef volatile struct {
    reg_t NIDEN : 1;
    reg_t DBG_EN : 1;
    reg_t SEC_ERR_RESP : 1;
    reg_t : 1;
    reg_t DCPKEY_OCOTP_OR_KEYMUX : 1;
    reg_t : 3;
    reg_t OCRAM_TZ_EN : 1;
    reg_t OCRAM_TZ_ADDR : 7;
    reg_t LOCK_NIDEN : 1;
    reg_t LOCK_DBG_EN : 1;
    reg_t LOCK_SEC_ERR_RESP : 1;
    reg_t : 1;
    reg_t LOCK_DCPKEY_OCOTP_OR_KEYMUX : 1;
    reg_t : 3;
    reg_t LOCK_OCRAM_TZ_EN : 1;
    reg_t LOCK_OCRAM_TZ_ADDR : 7;
} IOMUXC_GPR_GPR10_t;
#define IOMUXC_GPR_GPR10 ((IOMUXC_GPR_GPR10_t*)0x400AC028)

typedef volatile struct {
    reg_t M7_APC_AR_R0_CTRL : 2;
    reg_t M7_APC_AR_R1_CTRL : 2;
    reg_t M7_APC_AR_R2_CTRL : 2;
    reg_t M7_APC_AR_R3_CTRL : 2;
    reg_t BEE_DE_RX_EN : 4;
    reg_t : 20;
} IOMUXC_GPR_GPR11_t;
#define IOMUXC_GPR_GPR11 ((IOMUXC_GPR_GPR11_t*)0x400AC02C)

typedef volatile struct {
    reg_t FLEXIO1_IPG_STOP_MODE : 1;
    reg_t FLEXIO1_IPG_DOZE : 1;
    reg_t FLEXIO2_IPG_STOP_MODE : 1;
    reg_t FLEXIO2_IPG_DOZE : 1;
    reg_t ACMP_IPG_STOP_MODE : 1;
    reg_t FLEXIO3_IPG_STOP_MODE : 1;
    reg_t FLEXIO3_IPG_DOZE : 1;
    reg_t : 25;
} IOMUXC_GPR_GPR12_t;
#define IOMUXC_GPR_GPR12 ((IOMUXC_GPR_GPR12_t*)0x400AC030)

typedef volatile struct {
    reg_t ARCACHE_USDHC : 1;
    reg_t AWCACHE_USDHC : 1;
    reg_t : 2;
    reg_t CANFD_STOP_REQ : 1;
    reg_t : 2;
    reg_t CACHE_ENET : 1;
    reg_t : 5;
    reg_t CACHE_USB : 1;
    reg_t : 6;
    reg_t CANFD_STOP_ACK : 1;
    reg_t : 11;
} IOMUXC_GPR_GPR13_t;
#define IOMUXC_GPR_GPR13 ((IOMUXC_GPR_GPR13_t*)0x400AC034)

typedef volatile struct {
    reg_t ACMP1_CMP_IGEN_TRIM_DN : 1;
    reg_t ACMP2_CMP_IGEN_TRIM_DN : 1;
    reg_t ACMP3_CMP_IGEN_TRIM_DN : 1;
    reg_t ACMP4_CMP_IGEN_TRIM_DN : 1;
    reg_t ACMP1_CMP_IGEN_TRIM_UP : 1;
    reg_t ACMP2_CMP_IGEN_TRIM_UP : 1;
    reg_t ACMP3_CMP_IGEN_TRIM_UP : 1;
    reg_t ACMP4_CMP_IGEN_TRIM_UP : 1;
    reg_t ACMP1_SAMPLE_SYNC_EN : 1;
    reg_t ACMP2_SAMPLE_SYNC_EN : 1;
    reg_t ACMP3_SAMPLE_SYNC_EN : 1;
    reg_t ACMP4_SAMPLE_SYNC_EN : 1;
    reg_t : 20;
} IOMUXC_GPR_GPR14_t;
#define IOMUXC_GPR_GPR14 ((IOMUXC_GPR_GPR14_t*)0x400AC038)

typedef volatile struct {
    reg_t reserved : 32;
} IOMUXC_GPR_GPR15_t;
#define IOMUXC_GPR_GPR15 ((IOMUXC_GPR_GPR15_t*)0x400AC03C)

typedef volatile struct {
    reg_t : 2;
    reg_t FLEXRAM_BANK_CFG_SEL : 1;
    reg_t : 4;
    reg_t CM7_INIT_VTOR : 25;
} IOMUXC_GPR_GPR16_t;
#define IOMUXC_GPR_GPR16 ((IOMUXC_GPR_GPR16_t*)0x400AC040)

typedef volatile struct {
    reg_t FLEXRAM_BANK_CFG : 32;
} IOMUXC_GPR_GPR17_t;
#define IOMUXC_GPR_GPR17 ((IOMUXC_GPR_GPR17_t*)0x400AC044)

typedef volatile struct {
    reg_t LOCK_M7_APC_AC_R0_BOT : 1;
    reg_t : 2;
    reg_t M7_APC_AC_R0_BOT : 29;
} IOMUXC_GPR_GPR18_t;
#define IOMUXC_GPR_GPR18 ((IOMUXC_GPR_GPR18_t*)0x400AC048)

typedef volatile struct {
    reg_t LOCK_M7_APC_AC_R0_TOP : 1;
    reg_t : 2;
    reg_t M7_APC_AC_R0_TOP : 29;
} IOMUXC_GPR_GPR19_t;
#define IOMUXC_GPR_GPR19 ((IOMUXC_GPR_GPR19_t*)0x400AC04C)

typedef volatile struct {
    reg_t LOCK_M7_APC_AC_R1_BOT : 1;
    reg_t : 2;
    reg_t M7_APC_AC_R1_BOT : 29;
} IOMUXC_GPR_GPR20_t;
#define IOMUXC_GPR_GPR20 ((IOMUXC_GPR_GPR20_t*)0x400AC050)

typedef volatile struct {
    reg_t LOCK_M7_APC_AC_R1_TOP : 1;
    reg_t : 2;
    reg_t M7_APC_AC_R1_TOP : 29;
} IOMUXC_GPR_GPR21_t;
#define IOMUXC_GPR_GPR21 ((IOMUXC_GPR_GPR21_t*)0x400AC054)

typedef volatile struct {
    reg_t LOCK_M7_APC_AC_R2_BOT : 1;
    reg_t : 2;
    reg_t M7_APC_AC_R2_BOT : 29;
} IOMUXC_GPR_GPR22_t;
#define IOMUXC_GPR_GPR22 ((IOMUXC_GPR_GPR22_t*)0x400AC058)

typedef volatile struct {
    reg_t LOCK_M7_APC_AC_R2_TOP : 1;
    reg_t : 2;
    reg_t M7_APC_AC_R2_TOP : 29;
} IOMUXC_GPR_GPR23_t;
#define IOMUXC_GPR_GPR23 ((IOMUXC_GPR_GPR23_t*)0x400AC05C)

typedef volatile struct {
    reg_t LOCK_M7_APC_AC_R3_BOT : 1;
    reg_t : 2;
    reg_t M7_APC_AC_R3_BOT : 29;
} IOMUXC_GPR_GPR24_t;
#define IOMUXC_GPR_GPR24 ((IOMUXC_GPR_GPR24_t*)0x400AC060)

typedef volatile struct {
    reg_t LOCK_M7_APC_AC_R3_TOP : 1;
    reg_t : 2;
    reg_t M7_APC_AC_R3_TOP : 29;
} IOMUXC_GPR_GPR25_t;
#define IOMUXC_GPR_GPR25 ((IOMUXC_GPR_GPR25_t*)0x400AC064)

typedef volatile struct {
    reg_t GPIO_MUX1_GPIO_SEL : 32;
} IOMUXC_GPR_GPR26_t;
#define IOMUXC_GPR_GPR26 ((IOMUXC_GPR_GPR26_t*)0x400AC068)

typedef volatile struct {
    reg_t GPIO_MUX2_GPIO_SEL : 32;
} IOMUXC_GPR_GPR27_t;
#define IOMUXC_GPR_GPR27 ((IOMUXC_GPR_GPR27_t*)0x400AC06C)

typedef volatile struct {
    reg_t GPIO_MUX3_GPIO_SEL : 32;
} IOMUXC_GPR_GPR28_t;
#define IOMUXC_GPR_GPR28 ((IOMUXC_GPR_GPR28_t*)0x400AC070)

typedef volatile struct {
    reg_t GPIO_MUX4_GPIO_SEL : 32;
} IOMUXC_GPR_GPR29_t;
#define IOMUXC_GPR_GPR29 ((IOMUXC_GPR_GPR29_t*)0x400AC074)

typedef volatile struct {
    reg_t : 12;
    reg_t FLEXSPI_REMAP_ADDR_START : 20;
} IOMUXC_GPR_GPR30_t;
#define IOMUXC_GPR_GPR30 ((IOMUXC_GPR_GPR30_t*)0x400AC078)

typedef volatile struct {
    reg_t : 12;
    reg_t FLEXSPI_REMAP_ADDR_END : 20;
} IOMUXC_GPR_GPR31_t;
#define IOMUXC_GPR_GPR31 ((IOMUXC_GPR_GPR31_t*)0x400AC07C)

typedef volatile struct {
    reg_t : 12;
    reg_t FLEXSPI_REMAP_ADDR_OFFSET : 20;
} IOMUXC_GPR_GPR32_t;
#define IOMUXC_GPR_GPR32 ((IOMUXC_GPR_GPR32_t*)0x400AC080)

typedef volatile struct {
    reg_t OCRAM2_TZ_EN : 1;
    reg_t OCRAM2_TZ_ADDR : 7;
    reg_t : 8;
    reg_t LOCK_OCRAM2_TZ_EN : 1;
    reg_t LOCK_OCRAM2_TZ_ADDR : 7;
    reg_t : 8;
} IOMUXC_GPR_GPR33_t;
#define IOMUXC_GPR_GPR33 ((IOMUXC_GPR_GPR33_t*)0x400AC084)

typedef volatile struct {
    reg_t SIP_TEST_MUX_BOOT_PIN_SEL : 8;
    reg_t SIP_TEST_MUX_QSPI_SIP_EN : 1;
    reg_t : 23;
} IOMUXC_GPR_GPR34_t;
#define IOMUXC_GPR_GPR34 ((IOMUXC_GPR_GPR34_t*)0x400AC088)

#pragma endregion // IOMUXC_GPR

// IOMUXC SNVS Memory Map/Register Definition
// RM 11.4

#pragma region IOMUXC_SNVS

#define IOMUXC_SNVS_SW_MUX_CTL_PAD_WAKEUP           ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8000)
#define IOMUXC_SNVS_SW_MUX_CTL_PAD_PMIC_ON_REQ      ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8004)
#define IOMUXC_SNVS_SW_MUX_CTL_PAD_PMIC_STBY_REQ    ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8008)

#define IOMUXC_SNVS_SW_PAD_CTL_PAD_TEST_MODE        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F800C)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_POR_B            ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8010)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_ONOFF            ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8014)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_WAKEUP           ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8018)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_PMIC_ON_REQ      ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F801C)
#define IOMUXC_SNVS_SW_PAD_CTL_PAD_PMIC_STBY_REQ    ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8020)

#pragma endregion // IOMUXC_SNVS

// IOMUXC SNVS GPR Memory Map/Register Definition
// RM 11.5

#pragma region IOMUXC_SNVS_GPR

typedef volatile struct {
    reg_t reserved : 32;
} IOMUXC_SNVS_GPR_GPR0_t;
#define IOMUXC_SNVS_GPR_GPR0 ((IOMUXC_SNVS_GPR_GPR0_t*)0x401A4000)

typedef volatile struct {
    reg_t reserved : 32;
} IOMUXC_SNVS_GPR_GPR1_t;
#define IOMUXC_SNVS_GPR_GPR1 ((IOMUXC_SNVS_GPR_GPR1_t*)0x401A4004)

typedef volatile struct {
    reg_t reserved : 32;
} IOMUXC_SNVS_GPR_GPR2_t;
#define IOMUXC_SNVS_GPR_GPR2 ((IOMUXC_SNVS_GPR_GPR2_t*)0x401A4008)

typedef volatile struct {
    reg_t LPSR_MODE_ENABLE : 1;
    reg_t DCDC_STATUS_CAPT_CLR : 1;
    reg_t POR_PULL_TYPE : 2;
    reg_t : 12;
    reg_t DCDC_IN_LOW_VOL : 1;
    reg_t DCDC_OVER_CUR : 1;
    reg_t DCDC_OVER_VOL : 1;
    reg_t DCDC_STS_DC_OK : 1;
    reg_t : 12;
} IOMUXC_SNVS_GPR_GPR3_t;
#define IOMUXC_SNVS_GPR_GPR3 ((IOMUXC_SNVS_GPR_GPR3_t*)0x401A400C)

#pragma endregion

// IOMUXC SW MUX Memory Map/Register Definition
// RM 11.6

#pragma region IOMUXC_SW_MUX

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_00       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8014)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_01       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8018)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_02       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F801C)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_03       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8020)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_04       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8024)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_05       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8028)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_06       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F802C)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_07       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8030)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_08       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8034)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_09       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8038)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_10       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F803C)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_11       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8040)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_12       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8044)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_13       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8048)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_14       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F804C)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_15       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8050)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_16       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8054)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_17       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8058)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_18       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F805C)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_19       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8060)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_20       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8064)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_21       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8068)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_22       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F806C)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_23       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8070)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_24       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8074)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_25       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8078)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_26       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F807C)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_27       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8080)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_28       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8084)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_29       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8088)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_30       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F808C)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_31       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8090)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_32       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8094)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_33       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8098)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_34       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F809C)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_35       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F80A0)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_36       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F80A4)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_37       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F80A8)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_38       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F80AC)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_39       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F80B0)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_40       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F80B4)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_41       ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F80B8)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_00     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F80BC)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_01     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F80C0)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_02     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F80C4)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_03     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F80C8)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_04     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F80CC)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_05     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F80D0)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_06     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F80D4)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_07     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F80D8)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_08     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F80DC)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_09     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F80E0)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_10     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F80E4)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_11     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F80E8)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_12     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F80EC)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_13     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F80F0)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_14     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F80F4)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B0_15     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F80F8)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_00     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F80FC)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_01     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8100)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_02     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8104)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_03     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8108)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_04     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F810C)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_05     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8110)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_06     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8114)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_07     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8118)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_08     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F811C)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_09     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8120)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_10     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8124)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_11     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8128)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_12     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F812C)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_13     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8130)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_14     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8134)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_AD_B1_15     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8138)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B0_00        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F813C)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B0_01        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8140)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B0_02        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8144)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B0_03        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8148)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B0_04        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F814C)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B0_05        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8150)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B0_06        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8154)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B0_07        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8158)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B0_08        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F815C)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B0_09        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8160)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B0_10        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8164)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B0_11        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8168)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B0_12        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F816C)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B0_13        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8170)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B0_14        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8174)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B0_15        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8178)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B1_00        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F817C)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B1_01        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8180)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B1_02        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8184)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B1_03        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8188)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B1_04        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F818C)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B1_05        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8190)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B1_06        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8194)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B1_07        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8198)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B1_08        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F819C)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B1_09        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F81A0)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B1_10        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F81A4)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B1_11        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F81A8)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B1_12        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F81AC)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B1_13        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F81B0)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B1_14        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F81B4)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_B1_15        ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F81B8)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B0_00     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F81BC)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B0_01     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F81C0)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B0_02     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F81C4)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B0_03     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F81C8)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B0_04     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F81CC)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B0_05     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F81D0)

#define IOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B1_00     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F81D4)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B1_01     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F81D8)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B1_02     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F81DC)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B1_03     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F81E0)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B1_04     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F81E4)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B1_05     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F81E8)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B1_06     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F81EC)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B1_07     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F81F0)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B1_08     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F81F4)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B1_09     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F81F8)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B1_10     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F81FC)
#define IOMUXC_SW_MUX_CTL_PAD_GPIO_SD_B1_11     ((IOMUXC_SW_MUX_CTL_PAD_t*)0x401F8200)

#pragma endregion // IOMUXC_SW_MUX

// IOMUXC SW PAD Memory Map/Register Definition
// RM 11.6

#pragma region IOMUXC_SW_PAD

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_00       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8204)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_01       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8208)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_02       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F820C)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_03       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8210)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_04       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8214)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_05       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8218)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_06       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F821C)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_07       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8220)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_08       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8224)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_09       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8228)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_10       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F822C)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_11       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8230)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_12       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8234)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_13       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8238)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_14       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F823C)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_15       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8240)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_16       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8244)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_17       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8248)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_18       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F824C)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_19       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8250)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_20       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8254)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_21       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8258)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_22       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F825C)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_23       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8260)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_24       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8264)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_25       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8268)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_26       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F826C)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_27       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8270)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_28       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8274)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_29       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8278)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_30       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F827C)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_31       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8280)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_32       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8284)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_33       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8288)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_34       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F828C)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_35       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8290)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_36       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8294)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_37       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8298)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_38       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F829C)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_39       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F82A0)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_40       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F82A4)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_41       ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F82A8)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_00     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F82AC)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_01     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F82B0)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_02     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F82B4)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_03     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F82B8)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_04     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F82BC)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_05     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F82C0)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_06     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F82C4)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_07     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F82C8)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_08     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F82CC)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_09     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F82D0)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_10     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F82D4)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_11     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F82D8)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_12     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F82DC)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_13     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F82E0)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_14     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F82E4)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B0_15     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F82E8)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_00     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F82EC)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_01     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F82F0)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_02     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F82F4)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_03     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F82F8)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_04     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F82FC)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_05     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8300)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_06     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8304)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_07     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8308)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_08     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F830C)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_09     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8310)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_10     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8314)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_11     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8318)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_12     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F831C)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_13     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8320)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_14     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8324)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_AD_B1_15     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8328)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B0_00        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F832C)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B0_01        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8330)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B0_02        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8334)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B0_03        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8338)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B0_04        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F833C)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B0_05        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8340)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B0_06        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8344)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B0_07        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8348)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B0_08        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F834C)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B0_09        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8350)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B0_10        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8354)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B0_11        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8358)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B0_12        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F835C)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B0_13        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8360)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B0_14        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8364)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B0_15        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8368)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B1_00        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F836C)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B1_01        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8370)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B1_02        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8374)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B1_03        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8378)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B1_04        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F837C)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B1_05        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8380)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B1_06        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8384)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B1_07        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8388)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B1_08        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F838C)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B1_09        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8390)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B1_10        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8394)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B1_11        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F8398)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B1_12        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F839C)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B1_13        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F83A0)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B1_14        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F83A4)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_B1_15        ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F83A8)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B0_00     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F83AC)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B0_01     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F83B0)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B0_02     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F83B4)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B0_03     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F83B8)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B0_04     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F83BC)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B0_05     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F83C0)

#define IOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B1_00     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F83C4)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B1_01     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F83C8)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B1_02     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F83CC)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B1_03     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F83D0)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B1_04     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F83D4)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B1_05     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F83D8)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B1_06     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F83DC)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B1_07     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F83E0)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B1_08     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F83E4)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B1_09     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F83E8)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B1_10     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F83EC)
#define IOMUXC_SW_PAD_CTL_PAD_GPIO_SD_B1_11     ((IOMUXC_SW_PAD_CTL_PAD_t*)0x401F83F0)

#pragma endregion // IOMUXC_SW_PAD

// IOMUXC SELECT_INPUT DAISY Register Definition
// RM 11.6

#pragma region IOMUXC_SELECT_INPUT_DAISY

typedef volatile struct {
    reg_t DAISY : 3;
    reg_t : 29;
} IOMUXC_SELECT_INPUT_DAISY_t;

#define IOMUXC_ANATOP_USB_OTG1_ID_SELECT_INPUT          ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F83F4)
#define IOMUXC_ANATOP_USB_OTG2_ID_SELECT_INPUT          ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F83F8)
#define IOMUXC_CCM_PMIC_READY_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F83FC)
#define IOMUXC_CSI_DATA02_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8400)
#define IOMUXC_CSI_DATA03_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8404)
#define IOMUXC_CSI_DATA04_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8408)
#define IOMUXC_CSI_DATA05_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F840C)
#define IOMUXC_CSI_DATA06_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8410)
#define IOMUXC_CSI_DATA07_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8414)
#define IOMUXC_CSI_DATA08_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8418)
#define IOMUXC_CSI_DATA09_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F841C)
#define IOMUXC_CSI_HSYNC_SELECT_INPUT                   ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8420)
#define IOMUXC_CSI_PIXCLK_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8424)
#define IOMUXC_CSI_VSYNC_SELECT_INPUT                   ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8428)
#define IOMUXC_ENET_IPG_CLK_RMII_SELECT_INPUT           ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F842C)
#define IOMUXC_ENET_MDIO_SELECT_INPUT                   ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8430)
#define IOMUXC_ENET0_RXDATA_SELECT_INPUT                ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8434)
#define IOMUXC_ENET1_RXDATA_SELECT_INPUT                ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8438)
#define IOMUXC_ENET_RXEN_SELECT_INPUT                   ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F843C)
#define IOMUXC_ENET_RXERR_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8440)
#define IOMUXC_ENET0_TIMER_SELECT_INPUT                 ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8444)
#define IOMUXC_ENET_TXCLK_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8448)
#define IOMUXC_FLEXCAN1_RX_SELECT_INPUT                 ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F844C)
#define IOMUXC_FLEXCAN2_RX_SELECT_INPUT                 ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8450)
#define IOMUXC_FLEXPWM1_PWMA3_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8454)
#define IOMUXC_FLEXPWM1_PWMA0_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8458)
#define IOMUXC_FLEXPWM1_PWMA1_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F845C)
#define IOMUXC_FLEXPWM1_PWMA2_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8460)
#define IOMUXC_FLEXPWM1_PWMB3_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8464)
#define IOMUXC_FLEXPWM1_PWMB0_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8468)
#define IOMUXC_FLEXPWM1_PWMB1_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F846C)
#define IOMUXC_FLEXPWM1_PWMB2_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8470)
#define IOMUXC_FLEXPWM2_PWMA3_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8474)
#define IOMUXC_FLEXPWM2_PWMA0_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8478)
#define IOMUXC_FLEXPWM2_PWMA1_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F847C)
#define IOMUXC_FLEXPWM2_PWMA2_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8480)
#define IOMUXC_FLEXPWM2_PWMB3_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8484)
#define IOMUXC_FLEXPWM2_PWMB0_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8488)
#define IOMUXC_FLEXPWM2_PWMB1_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F848C)
#define IOMUXC_FLEXPWM2_PWMB2_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8490)
#define IOMUXC_FLEXPWM4_PWMA0_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8494)
#define IOMUXC_FLEXPWM4_PWMA1_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8498)
#define IOMUXC_FLEXPWM4_PWMA2_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F849C)
#define IOMUXC_FLEXPWM4_PWMA3_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F84A0)
#define IOMUXC_FLEXSPIA_DQS_SELECT_INPUT                ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F84A4)
#define IOMUXC_FLEXSPIA_DATA0_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F84A8)
#define IOMUXC_FLEXSPIA_DATA1_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F84AC)
#define IOMUXC_FLEXSPIA_DATA2_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F84B0)
#define IOMUXC_FLEXSPIA_DATA3_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F84B4)
#define IOMUXC_FLEXSPIB_DATA0_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F84B8)
#define IOMUXC_FLEXSPIB_DATA1_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F84BC)
#define IOMUXC_FLEXSPIB_DATA2_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F84C0)
#define IOMUXC_FLEXSPIB_DATA3_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F84C4)
#define IOMUXC_FLEXSPIA_SCK_SELECT_INPUT                ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F84C8)
#define IOMUXC_LPI2C1_SCL_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F84CC)
#define IOMUXC_LPI2C1_SDA_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F84D0)
#define IOMUXC_LPI2C2_SCL_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F84D4)
#define IOMUXC_LPI2C2_SDA_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F84D8)
#define IOMUXC_LPI2C3_SCL_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F84DC)
#define IOMUXC_LPI2C3_SDA_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F84E0)
#define IOMUXC_LPI2C4_SCL_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F84E4)
#define IOMUXC_LPI2C4_SDA_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F84E8)
#define IOMUXC_LPSPI1_PCS0_SELECT_INPUT                 ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F84EC)
#define IOMUXC_LPSPI1_SCK_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F84F0)
#define IOMUXC_LPSPI1_SDI_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F84F4)
#define IOMUXC_LPSPI1_SDO_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F84F8)
#define IOMUXC_LPSPI2_PCS0_SELECT_INPUT                 ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F84FC)
#define IOMUXC_LPSPI2_SCK_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8500)
#define IOMUXC_LPSPI2_SDI_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8504)
#define IOMUXC_LPSPI2_SDO_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8508)
#define IOMUXC_LPSPI3_PCS0_SELECT_INPUT                 ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F850C)
#define IOMUXC_LPSPI3_SCK_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8510)
#define IOMUXC_LPSPI3_SDI_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8514)
#define IOMUXC_LPSPI3_SDO_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8518)
#define IOMUXC_LPSPI4_PCS0_SELECT_INPUT                 ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F851C)
#define IOMUXC_LPSPI4_SCK_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8520)
#define IOMUXC_LPSPI4_SDI_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8524)
#define IOMUXC_LPSPI4_SDO_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8528)
#define IOMUXC_LPUART2_RX_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F852C)
#define IOMUXC_LPUART2_TX_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8530)
#define IOMUXC_LPUART3_CTS_B_SELECT_INPUT               ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8534)
#define IOMUXC_LPUART3_RX_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8538)
#define IOMUXC_LPUART3_TX_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F853C)
#define IOMUXC_LPUART4_RX_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8540)
#define IOMUXC_LPUART4_TX_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8544)
#define IOMUXC_LPUART5_RX_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8548)
#define IOMUXC_LPUART5_TX_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F854C)
#define IOMUXC_LPUART6_RX_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8550)
#define IOMUXC_LPUART6_TX_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8554)
#define IOMUXC_LPUART7_RX_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8558)
#define IOMUXC_LPUART7_TX_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F855C)
#define IOMUXC_LPUART8_RX_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8560)
#define IOMUXC_LPUART8_TX_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8564)
#define IOMUXC_NMI_SELECT_INPUT                         ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8568)
#define IOMUXC_QTIMER2_TIMER0_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F856C)
#define IOMUXC_QTIMER2_TIMER1_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8570)
#define IOMUXC_QTIMER2_TIMER2_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8574)
#define IOMUXC_QTIMER2_TIMER3_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8578)
#define IOMUXC_QTIMER3_TIMER0_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F857C)
#define IOMUXC_QTIMER3_TIMER1_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8580)
#define IOMUXC_QTIMER3_TIMER2_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8584)
#define IOMUXC_QTIMER3_TIMER3_SELECT_INPUT              ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8588)
#define IOMUXC_SAI1_MCLK2_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F858C)
#define IOMUXC_SAI1_RX_BCLK_SELECT_INPUT                ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8590)
#define IOMUXC_SAI1_RX_DATA0_SELECT_INPUT               ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8594)
#define IOMUXC_SAI1_RX_DATA1_SELECT_INPUT               ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8598)
#define IOMUXC_SAI1_RX_DATA2_SELECT_INPUT               ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F859C)
#define IOMUXC_SAI1_RX_DATA3_SELECT_INPUT               ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F85A0)
#define IOMUXC_SAI1_RX_SYNC_SELECT_INPUT                ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F85A4)
#define IOMUXC_SAI1_TX_BCLK_SELECT_INPUT                ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F85A8)
#define IOMUXC_SAI1_TX_SYNC_SELECT_INPUT                ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F85AC)
#define IOMUXC_SAI2_MCLK2_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F85B0)
#define IOMUXC_SAI2_RX_BCLK_SELECT_INPUT                ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F85B4)
#define IOMUXC_SAI2_RX_DATA0_SELECT_INPUT               ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F85B8)
#define IOMUXC_SAI2_RX_SYNC_SELECT_INPUT                ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F85BC)
#define IOMUXC_SAI2_TX_BCLK_SELECT_INPUT                ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F85C0)
#define IOMUXC_SAI2_TX_SYNC_SELECT_INPUT                ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F85C4)
#define IOMUXC_SPDIF_IN_SELECT_INPUT                    ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F85C8)
#define IOMUXC_USB_OTG2_OC_SELECT_INPUT                 ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F85CC)
#define IOMUXC_USB_OTG1_OC_SELECT_INPUT                 ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F85D0)
#define IOMUXC_USDHC1_CD_B_SELECT_INPUT                 ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F85D4)
#define IOMUXC_USDHC1_WP_SELECT_INPUT                   ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F85D8)
#define IOMUXC_USDHC2_CLK_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F85DC)
#define IOMUXC_USDHC2_CD_B_SELECT_INPUT                 ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F85E0)
#define IOMUXC_USDHC2_CMD_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F85E4)
#define IOMUXC_USDHC2_DATA0_SELECT_INPUT                ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F85E8)
#define IOMUXC_USDHC2_DATA1_SELECT_INPUT                ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F85EC)
#define IOMUXC_USDHC2_DATA2_SELECT_INPUT                ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F85F0)
#define IOMUXC_USDHC2_DATA3_SELECT_INPUT                ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F85F4)
#define IOMUXC_USDHC2_DATA4_SELECT_INPUT                ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F85F8)
#define IOMUXC_USDHC2_DATA5_SELECT_INPUT                ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F85FC)
#define IOMUXC_USDHC2_DATA6_SELECT_INPUT                ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8600)
#define IOMUXC_USDHC2_DATA7_SELECT_INPUT                ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8604)
#define IOMUXC_USDHC2_WP_SELECT_INPUT                   ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8608)
#define IOMUXC_XBAR1_IN02_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F860C)
#define IOMUXC_XBAR1_IN03_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8610)
#define IOMUXC_XBAR1_IN04_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8614)
#define IOMUXC_XBAR1_IN05_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8618)
#define IOMUXC_XBAR1_IN06_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F861C)
#define IOMUXC_XBAR1_IN07_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8620)
#define IOMUXC_XBAR1_IN08_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8624)
#define IOMUXC_XBAR1_IN09_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8628)
#define IOMUXC_XBAR1_IN17_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F862C)
#define IOMUXC_XBAR1_IN18_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8630)
#define IOMUXC_XBAR1_IN20_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8634)
#define IOMUXC_XBAR1_IN22_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8638)
#define IOMUXC_XBAR1_IN23_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F863C)
#define IOMUXC_XBAR1_IN24_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8640)
#define IOMUXC_XBAR1_IN14_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8644)
#define IOMUXC_XBAR1_IN15_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8648)
#define IOMUXC_XBAR1_IN16_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F864C)
#define IOMUXC_XBAR1_IN25_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8650)
#define IOMUXC_XBAR1_IN19_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8654)
#define IOMUXC_XBAR1_IN21_SELECT_INPUT                  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8658)
#define IOMUXC_ENET2_IPG_CLK_RMII_SELECT_INPUT          ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F870C)
#define IOMUXC_ENET2_IPP_IND_MAC0_MDIO_SELECT_INPUT     ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8710)
#define IOMUXC_ENET2_IPP_IND_MAC0_RXDATA_SELECT_INPUT_0 ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8714)
#define IOMUXC_ENET2_IPP_IND_MAC0_RXDATA_SELECT_INPUT_1 ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8718)
#define IOMUXC_ENET2_IPP_IND_MAC0_RXEN_SELECT_INPUT     ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F871C)
#define IOMUXC_ENET2_IPP_IND_MAC0_RXERR_SELECT_INPUT    ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8720)
#define IOMUXC_ENET2_IPP_IND_MAC0_TIMER_SELECT_INPUT_0  ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8724)
#define IOMUXC_ENET2_IPP_IND_MAC0_TXCLK_SELECT_INPUT    ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8728)
#define IOMUXC_FLEXSPI2_IPP_IND_DQS_FA_SELECT_INPUT     ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F872C)
#define IOMUXC_FLEXSPI2_IPP_IND_IO_FA_BIT0_SELECT_INPUT ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8730)
#define IOMUXC_FLEXSPI2_IPP_IND_IO_FA_BIT1_SELECT_INPUT ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8734)
#define IOMUXC_FLEXSPI2_IPP_IND_IO_FA_BIT2_SELECT_INPUT ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8738)
#define IOMUXC_FLEXSPI2_IPP_IND_IO_FA_BIT3_SELECT_INPUT ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F873C)
#define IOMUXC_FLEXSPI2_IPP_IND_IO_FB_BIT0_SELECT_INPUT ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8740)
#define IOMUXC_FLEXSPI2_IPP_IND_IO_FB_BIT1_SELECT_INPUT ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8744)
#define IOMUXC_FLEXSPI2_IPP_IND_IO_FB_BIT2_SELECT_INPUT ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8748)
#define IOMUXC_FLEXSPI2_IPP_IND_IO_FB_BIT3_SELECT_INPUT ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F874C)
#define IOMUXC_FLEXSPI2_IPP_IND_SCK_FA_SELECT_INPUT     ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8750)
#define IOMUXC_FLEXSPI2_IPP_IND_SCK_FB_SELECT_INPUT     ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8754)
#define IOMUXC_GPT1_IPP_IND_CAPIN1_SELECT_INPUT         ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8758)
#define IOMUXC_GPT1_IPP_IND_CAPIN2_SELECT_INPUT         ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F875C)
#define IOMUXC_GPT1_IPP_IND_CLKIN_SELECT_INPUT          ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8760)
#define IOMUXC_GPT2_IPP_IND_CAPIN1_SELECT_INPUT         ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8764)
#define IOMUXC_GPT2_IPP_IND_CAPIN2_SELECT_INPUT         ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8768)
#define IOMUXC_GPT2_IPP_IND_CLKIN_SELECT_INPUT          ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F876C)
#define IOMUXC_SAI3_IPG_CLK_SAI_MCLK_SELECT_INPUT_2     ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8770)
#define IOMUXC_SAI3_IPP_IND_SAI_RXBCLK_SELECT_INPUT     ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8774)
#define IOMUXC_SAI3_IPP_IND_SAI_RXDATA_SELECT_INPUT_0   ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8778)
#define IOMUXC_SAI3_IPP_IND_SAI_RXSYNC_SELECT_INPUT     ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F877C)
#define IOMUXC_SAI3_IPP_IND_SAI_TXBCLK_SELECT_INPUT     ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8780)
#define IOMUXC_SAI3_IPP_IND_SAI_TXSYNC_SELECT_INPUT     ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8784)
#define IOMUXC_SEMC_I_IPP_IND_DQS4_SELECT_INPUT         ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F8788)
#define IOMUXC_CANFD_IPP_IND_CANRX_SELECT_INPUT         ((IOMUXC_SELECT_INPUT_DAISY_t*)0x401F878C)

#pragma endregion // IOMUXC_SELECT_INPUT_DAISY

// General Purpose Input/Output (GPIO) Register Definition
// RM 12.1

#pragma region GPIO

typedef volatile struct {
    reg_t DR : 32;
} GPIO_DR_t;

typedef volatile struct {
    reg_t GDIR : 32;
} GPIO_GDIR_t;

typedef volatile struct {
    reg_t PSR : 32;
} GPIO_PSR_t;

typedef volatile struct {
    reg_t ICR0 : 2;
    reg_t ICR1 : 2;
    reg_t ICR2 : 2;
    reg_t ICR3 : 2;
    reg_t ICR4 : 2;
    reg_t ICR5 : 2;
    reg_t ICR6 : 2;
    reg_t ICR7 : 2;
    reg_t ICR8 : 2;
    reg_t ICR9 : 2;
    reg_t ICR10 : 2;
    reg_t ICR11 : 2;
    reg_t ICR12 : 2;
    reg_t ICR13 : 2;
    reg_t ICR14 : 2;
    reg_t ICR15 : 2;
} GPIO_ICR1_t;

typedef volatile struct {
    reg_t ICR16 : 2;
    reg_t ICR17 : 2;
    reg_t ICR18 : 2;
    reg_t ICR19 : 2;
    reg_t ICR20 : 2;
    reg_t ICR21 : 2;
    reg_t ICR22 : 2;
    reg_t ICR23 : 2;
    reg_t ICR24 : 2;
    reg_t ICR25 : 2;
    reg_t ICR26 : 2;
    reg_t ICR27 : 2;
    reg_t ICR28 : 2;
    reg_t ICR29 : 2;
    reg_t ICR30 : 2;
    reg_t ICR31 : 2;
} GPIO_ICR2_t;

typedef volatile struct {
    reg_t IMR : 32;
} GPIO_IMR_t;

typedef volatile struct {
    reg_t ISR : 32;
} GPIO_ISR_t;

typedef volatile struct {
    reg_t EDGE_SEL : 32;
} GPIO_EDGE_SEL_t;

typedef volatile struct {
    reg_t DR_SET : 32;
} GPIO_DR_SET_t;

typedef volatile struct {
    reg_t DR_CLEAR : 32;
} GPIO_DR_CLEAR_t;

typedef volatile struct {
    reg_t DR_TOGGLE : 32;
} GPIO_DR_TOGGLE_t;

typedef volatile struct {
    /* 0x0  */ GPIO_DR_t DR;
    /* 0x4  */ GPIO_GDIR_t GDIR;
    /* 0x8  */ GPIO_PSR_t PSR;
    /* 0xC  */ GPIO_ICR1_t ICR1;
    /* 0x10 */ GPIO_ICR2_t ICR2;
    /* 0x14 */ GPIO_IMR_t IMR;
    /* 0x18 */ GPIO_ISR_t ISR;
    /* 0x1C */ GPIO_EDGE_SEL_t EDGE_SEL;
    /*      */ uint32_t reserved[25];
    /* 0x84 */ GPIO_DR_SET_t DR_SET;
    /* 0x88 */ GPIO_DR_CLEAR_t DR_CLEAR;
    /* 0x8C */ GPIO_DR_TOGGLE_t DR_TOGGLE;
} GPIO_t;

#define GPIO1 ((GPIO_t*)0x401B8000)
#define GPIO2 ((GPIO_t*)0x401BC000)
#define GPIO3 ((GPIO_t*)0x401C0000)
#define GPIO4 ((GPIO_t*)0x401C4000)
#define GPIO5 ((GPIO_t*)0x400C0000)
#define GPIO6 ((GPIO_t*)0x42000000)
#define GPIO7 ((GPIO_t*)0x42004000)
#define GPIO8 ((GPIO_t*)0x42008000)
#define GPIO9 ((GPIO_t*)0x4200C000)

#pragma endregion // GPIO

#pragma endregion // IOMUXC

#endif // IMXRT_REGMAP_H